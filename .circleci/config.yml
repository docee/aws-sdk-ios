# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build:
    macos: 
      xcode: "10.1.0"
    steps:
      - checkout

      - run:
          name: create credentials
          command: |
            touch AWSCoreTests/Resources/credentials.json   
            touch AWSAuthSDK/Tests/AWSMobileClientTests/awsconfiguration.json
            touch AWSAuthSDK/Tests/AWSMobileClientTests/credentials-mc.json

      - run:
          name: build sdk
          command: |
            xcodebuild  build -project AWSiOSSDKv2.xcodeproj -scheme AWSAllTests -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8,OS=12.1'         
            xcodebuild  build -project AWSAuthSDK/AWSAuthSDK.xcodeproj -scheme AWSAuthSDKAllTargets -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8,OS=12.1'
  unittest:
    macos:
      xcode: "10.1.0"

    steps:
      - checkout

      - run:
          name: create credentials
          command: |
            touch AWSCoreTests/Resources/credentials.json 

      - run:
          name: build sdk
          command: xcodebuild  build-for-testing -project AWSiOSSDKv2.xcodeproj -scheme AWSAllTests -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8,OS=12.1'      
  
      - run :
          name: run unit tests
          command: bash CircleciScripts/run_unittests.sh "test_result"

      - run:
          name : check unit test result 
          command : bash CircleciScripts/check_test_result.sh  "test_result"
          
      - store_artifacts:
          path: test_result
  release_carthage:
    # Specify the Xcode version to use
    macos:
      xcode: "10.1.0"

    steps: 
      - checkout

      - run:
          name: install github-release
          command: brew install github-release
                
      - run:
          name: install aws cli
          command: |
            brew install awscli
      - run:
          name: download custom carthage
          command: |
            aws s3 cp s3://custom-carthage/customcarthage.zip customcarthage.zip
            unzip -a customcarthage.zip
            ls customcarthage
            chmod 111 customcarthage/carthage

      - run:
          name: build 
          command: |
            xcodebuild -project AWSiOSSDKv2.xcodeproj -scheme AWSCore -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8,OS=11.2' build     
      - run:
          name: Build Carthage
          command: |
            customcarthage/carthage build --no-skip-current | tee buildout.txt
          no_output_timeout: 100m

      - run:
          name: Create Carthage Archive
          command: bash CreateCarthageArchive.sh   

      - run:
          name: release the tag
          command: |
            tagdescription=$(sed -n '/## '${CIRCLE_TAG}'/,/## [0-9]*\.[0-9]*\.[0-9]/p'  CHANGELOG.md | sed '1d' | sed '$d')
            tagname="AWS SDK for iOS "${CIRCLE_TAG}
            github-release release -s ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t ${CIRCLE_TAG} -d "$tagdescription" -n "$tagname"         
      - run:
          name: upload file to git release 
          command: github-release upload -s ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME}  -t ${CIRCLE_TAG} -f aws-sdk-ios-carthage.framework.zip -n aws-sdk-ios-carthage.framework.zip

  release_cocoapods:
    # Specify the Xcode version to use
    macos:
      xcode: "10.1.0"
    steps:
      - checkout  
      - run:
          name: Release cocoapods
          command : python3    cocoapods_release.py
  release_appledoc:
    # Specify the Xcode version to use
    macos:
      xcode: "9.2.0"
    steps:
      - checkout  
 
      - run:
          name: Install appledoc 
          command: |
            pwd
            pushd $TMPDIR
            git clone https://github.com/tomaz/appledoc
            cd appledoc
            bash install-appledoc.sh -t default
            popd 
            pwd

      - run:
          name: generate documents
          command: bash ./Scripts/GenerateAppleDocs.sh

      - run:
          name: copy documents
          command: |
            git config --local user.name "AWS"
            git checkout  gh-pages
            cp -R docs/html/*   docs/reference/

      - run:
          name: checkin documents
          command: |
            git add docs/reference
            git commit -m "Update document via CircleCI"
            git push -q https://${GITHUB_TOKEN}@github.com/aws/aws-sdk-ios.git  

workflows:
  version: 2

  build_and_test:
    jobs: 
      - build:
          filters:
            branches:
              ignore: /gh-.*/
      - unittest:
          requires:
            - build
          filters:
            branches:
              ignore: /gh-.*/

  release_sdk:
    jobs: 
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+.[0-9]+.[0-9]+$/

      - unittest:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+.[0-9]+.[0-9]+$/

      - release_carthage:
          requires:
            - unittest        
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+.[0-9]+.[0-9]+$/
      - release_cocoapods:
          requires:
            - unittest          
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+.[0-9]+.[0-9]+$/
      - release_appledoc:
          requires:
            - unittest          
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+.[0-9]+.[0-9]+$/
